# This is a basic workflow to help you get started with Actions

name: Build APK

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Check Directory
        run : |
         ls -a
         tree ./

      - name: install Dependencies
        run : |
         sudo apt install curl build-essential gcc g++ cmake make ninja-build git wget openssl zipalign apksigner zip unzip openjdk-19-jre-headless -y
         curl -o r23c.zip https://dl.google.com/android/repository/android-ndk-r23c-linux.zip
         unzip r23c.zip

      - name: clone repo
        run : git clone https://github.com/MrPurple666/AetherSX2 -b main

      - name: create directory
        run : mkdir build-android && cd build-android && mkdir apk

      - name: check dir
        run : | 
         ls -a
         tree ./
         cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/android-ndk-r23c/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=android-26 -DANDROID_ABI=arm64-v8a ..
        
      - name: build libemucore
        run : make -j8

      - name: get APK Shell
        run : |
         cd $HOME/build-android/apk
         curl -o purplesx2.apk https://github.com/mininxd/AetherSX2-reborn/releases/download/shell/shell
         mkdir -p lib/arm64-v8a && cp ../pcsx2/libemucore.so lib/arm64-v8a
         ls -a 
         tree ./

      - name: zipalign
        run : |
         zip -0 purplesx2.apk lib/arm64-v8a/libemucore.so
         zipalign -p 4 purplesx2.apk purplesx2-aligned.apk
         keytool -genkey -v -keystore keyname.keystore -alias keyname -keyalg RSA -keysize 2048 -validity 10000
         apksigner sign --ks keyname.keystore --ks-pass "pass:pass_keystore" --ks-key-alias keyname --out purplesx2-signed.apk --verbose purplesx2-aligned.apk
         tree ./
      
      - name: Upload to Artifact
        uses: actions/upload-artifact@v3
        with:
         name: purplesx2-signed.apk
         path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}${{ github.workflow_sha }}
          release_name: test
    
      - name: Upload purplesx2.apk
        uses: actions/upload-release-asset@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ./purplesx2-signed.apk
         asset_name: purplesx2-signed.apk
         asset_content_type: application/octet-stream
       
      

        

      


      
